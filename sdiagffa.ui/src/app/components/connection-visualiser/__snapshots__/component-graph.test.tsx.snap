// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`ConnectionGraph component > should render default state 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="w-full h-full absolute top-0 left-0"
      >
        <div>
          Graph: 
          {"nodes":[{"id":"Character_1","label":"Luke Skywalker"}],"edges":[]}
        </div>
        <div>
          Options: 
          {"nodes":{"shape":"icon","icon":{"face":"FontAwesome","code":"","color":"#1B1614","weight":"normal"},"font":{"color":"#1B1614"},"chosen":{},"fixed":{"x":false,"y":false}},"edges":{"color":"#1B1614","font":{"color":"#1B1614","strokeWidth":0},"chosen":{},"width":2},"physics":{"enabled":false},"interaction":{"selectConnectedEdges":false}}
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="w-full h-full absolute top-0 left-0"
    >
      <div>
        Graph: 
        {"nodes":[{"id":"Character_1","label":"Luke Skywalker"}],"edges":[]}
      </div>
      <div>
        Options: 
        {"nodes":{"shape":"icon","icon":{"face":"FontAwesome","code":"","color":"#1B1614","weight":"normal"},"font":{"color":"#1B1614"},"chosen":{},"fixed":{"x":false,"y":false}},"edges":{"color":"#1B1614","font":{"color":"#1B1614","strokeWidth":0},"chosen":{},"width":2},"physics":{"enabled":false},"interaction":{"selectConnectedEdges":false}}
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`ConnectionGraph component > should render default state in darkmode 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="w-full h-full absolute top-0 left-0"
      >
        <div>
          Graph: 
          {"nodes":[{"id":"Character_1","label":"Luke Skywalker"}],"edges":[]}
        </div>
        <div>
          Options: 
          {"nodes":{"shape":"icon","icon":{"face":"FontAwesome","code":"","color":"#FFFFFF","weight":"normal"},"font":{"color":"#FFFFFF"},"chosen":{},"fixed":{"x":false,"y":false}},"edges":{"color":"#FFFFFF","font":{"color":"#FFFFFF","strokeWidth":0},"chosen":{},"width":2},"physics":{"enabled":false},"interaction":{"selectConnectedEdges":false}}
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="w-full h-full absolute top-0 left-0"
    >
      <div>
        Graph: 
        {"nodes":[{"id":"Character_1","label":"Luke Skywalker"}],"edges":[]}
      </div>
      <div>
        Options: 
        {"nodes":{"shape":"icon","icon":{"face":"FontAwesome","code":"","color":"#FFFFFF","weight":"normal"},"font":{"color":"#FFFFFF"},"chosen":{},"fixed":{"x":false,"y":false}},"edges":{"color":"#FFFFFF","font":{"color":"#FFFFFF","strokeWidth":0},"chosen":{},"width":2},"physics":{"enabled":false},"interaction":{"selectConnectedEdges":false}}
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
